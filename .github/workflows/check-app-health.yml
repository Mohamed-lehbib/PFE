name: Check Server Status

on:
  schedule:
    - cron: "0 */3 * * *" # This cron schedule runs the job every 3 hours
  workflow_dispatch:

jobs:
  check-server-status:
    runs-on: ubuntu-latest

    outputs:
      status: ${{ steps.set_status.outputs.status }}

    steps:
      - uses: actions/checkout@v2
      - name: Send request to the application
        id: check_status
        run: |
          response=$(curl --write-out '%{http_code}' --silent --output /dev/null ${{ secrets.APP_URL }})
          echo "HTTP response code: $response"
          if [ "$response" -eq 200 ]; then
            echo "Server is up and running"
            echo "up" > current_status.txt
          else
            echo "Server is down"
            echo "down" > current_status.txt
          fi
      - name: Set status output
        id: set_status
        run: echo "::set-output name=status::$(cat current_status.txt)"
      - name: Upload current status file as artifact
        uses: actions/upload-artifact@v2
        with:
          name: current-server-status
          path: current_status.txt

  notify:
    needs: check-server-status
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download current status file
        uses: actions/download-artifact@v2
        with:
          name: current-server-status

      - name: Check if previous status file exists
        id: check_previous_status
        run: |
          if [ -f previous_status.txt ]; then
            echo "Previous status file exists."
          else
            echo "Previous status file does not exist, creating one."
            echo "unknown" > previous_status.txt
          fi

      - name: Read previous status
        run: |
          previous_status=$(cat previous_status.txt)
          echo "Previous status: $previous_status"
          echo "previous_status=$previous_status" >> $GITHUB_ENV

      - name: Update previous status file for next run
        run: cp current_status.txt previous_status.txt

      - name: Upload previous status file as artifact
        uses: actions/upload-artifact@v2
        with:
          name: previous-server-status
          path: previous_status.txt

      - name: Debug environment variables
        run: |
          current_status=$(cat current_status.txt)
          echo "Current status: $current_status"
          echo "Previous status: ${{ env.previous_status }}"

      - name: Send Slack notification if server is down
        if: ${{ needs.check-server-status.outputs.status == 'down' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: danger
          SLACK_MESSAGE: ":red_circle: The server is currently down. Immediate attention is required. <https://pfe-two.vercel.app|Visit Site>"
          SLACK_TITLE: "Server Status Alert - Down"
          MSG_MINIMAL: true
          SLACK_WEBHOOK: ${{ secrets.SLACK_MONITORING_WEBHOOK_URL }}

      - name: Send Slack notification if server is back up
        if: ${{ needs.check-server-status.outputs.status == 'up' && env.previous_status == 'down' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: good
          SLACK_MESSAGE: ":white_check_mark: The server is back up and running smoothly. <https://pfe-two.vercel.app|Visit Site>"
          SLACK_TITLE: "Server Status Alert - Up"
          MSG_MINIMAL: true
          SLACK_WEBHOOK: ${{ secrets.SLACK_MONITORING_WEBHOOK_URL }}
